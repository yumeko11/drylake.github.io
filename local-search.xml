<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>NoSql之Redis</title>
    <link href="/2021/08/06/NoSql%E4%B9%8BRedis/"/>
    <url>/2021/08/06/NoSql%E4%B9%8BRedis/</url>
    
    <content type="html"><![CDATA[<h3 id="一、Redis简介"><a href="#一、Redis简介" class="headerlink" title="一、Redis简介"></a>一、Redis简介</h3><h4 id="1、什么是Redis"><a href="#1、什么是Redis" class="headerlink" title="1、什么是Redis"></a>1、什么是Redis</h4><p>Redis是现在最受欢迎的NoSQL数据库之一 使用ANSI C编写的开源、包含多种数据结构、支持网络、基于内存、可选持久性的键值对存储数据库</p><h4 id="2、Redis的特性"><a href="#2、Redis的特性" class="headerlink" title="2、Redis的特性"></a>2、Redis的特性</h4><ul><li>基于内存运行 性能高效</li><li>支持分布式 理论上可以无限扩展</li><li>key-value存储系统</li><li>开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型数据库、提供多种语言的API</li></ul><h4 id="3、Redis的优点"><a href="#3、Redis的优点" class="headerlink" title="3、Redis的优点"></a>3、Redis的优点</h4><ul><li>C/S通讯模型</li><li>单进程单线程模型</li><li>丰富的数据类型</li><li>操作具有原子性</li><li>持久化</li><li>高并发读写</li><li>支持lua脚本</li></ul><h4 id="4、Redis的应用场景"><a href="#4、Redis的应用场景" class="headerlink" title="4、Redis的应用场景"></a>4、Redis的应用场景</h4><p>缓存系统(“热点”数据：高频读、低频写)、计数器、消息队列系统、排行榜、社交网络和实时系统</p><hr><h3 id="二、Redis的安装"><a href="#二、Redis的安装" class="headerlink" title="二、Redis的安装"></a>二、Redis的安装</h3><h4 id="1、在Linux系统安装"><a href="#1、在Linux系统安装" class="headerlink" title="1、在Linux系统安装"></a>1、在Linux系统安装</h4><ol><li>下载redis<blockquote><p><a href="https://redis.io/">https://redis.io/</a></p></blockquote></li><li>将压缩文件复制到opt文件夹下<ul><li><code>cd /opt</code></li><li><code>tar -zxvf redis-6.2.5.tar.gz</code>解压文件</li><li><code>cd redis-6.2.5</code></li><li><code>yum install gcc</code>下载C语言编译</li><li><code>make</code>编译</li><li><code>make install</code>安装</li></ul></li><li>新建文件夹将redis.conf文件备份<ul><li><code>mkdir /opt/myRedis</code></li><li><code>cp redis.conf /opt/myRedis/redis.conf</code></li><li><code>cd /opt/myRedis/</code></li><li><code>vi redis.conf</code></li><li>将配置文件下的<code>daemonize no</code>改成<code>daemonize yes</code> <em>将其设置为后台启动</em></li></ul></li><li>启动redis服务<ul><li><code>cd /opt/myRedis/</code></li><li><code>redis-server redis.conf</code></li></ul></li><li>启动redis客户端<ul><li><code>redis-cli -h -p</code></li></ul></li><li>重启redis<ol><li>客户端重启<ul><li><code>shutdown</code></li><li><code>redis-cli -p 6379 shutdown</code></li><li><code>redis-server redis.conf</code></li></ul></li><li>杀进程重启<ul><li><code>ps -ef | grep redis</code>查看进程</li><li><code>kill 进程号</code></li><li><code>redis-server redis.conf</code></li></ul></li></ol></li></ol><hr><h3 id="三、Redis数据结构及常用语法"><a href="#三、Redis数据结构及常用语法" class="headerlink" title="三、Redis数据结构及常用语法"></a>三、Redis数据结构及常用语法</h3><h4 id="1、String-字符串"><a href="#1、String-字符串" class="headerlink" title="1、String(字符串)"></a>1、String(字符串)</h4><table><thead><tr><th>命令</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>set key value</td><td>设置指定key的值</td><td>set k1 v1</td></tr><tr><td>get key</td><td>获取指定key的值</td><td>GET k1</td></tr><tr><td>getrange key start end</td><td>返回key中字符串值的子字符</td><td>getrange k1 0 -1</td></tr><tr><td>getset key value</td><td>将给定key的值设为value,并返回 key 的旧值</td><td>getset k1 v2</td></tr><tr><td>mget key1 key2..</td><td>获取所有(一个或多个)给定key的值</td><td>mget k1 k2 k3</td></tr><tr><td>setex key seconds value</td><td>将值value关联到key,并将key的过期时间设为seconds(以秒为单位)</td><td>setex k1 60 v1</td></tr><tr><td>psetex key milliseconds value</td><td>将值value关联到key,并将key的过期时间设为milliseconds(以毫秒为单位)</td><td>setex k1 1000 v1</td></tr><tr><td>setnx key value</td><td>只有在key不存在时设置key的值</td><td>setnx k2 v2</td></tr><tr><td>strlen key</td><td>返回key所储存的字符串值的长度</td><td>strlen k1</td></tr><tr><td>mset key1 value1 key2 value2…</td><td>同时设置一个或多个key-value对</td><td>mset k1 v1 k2 v2</td></tr><tr><td>msetnx key1 value1 key2 value2…</td><td>同时设置一个或多个key-value对,当且仅当所有给定key都不存在</td><td>msetnx k1 v1 k2 v2</td></tr><tr><td>incr key</td><td>将key中储存的数字值增一</td><td>incr k1</td></tr><tr><td>decr key</td><td>将key中储存的数字值减一</td><td>decr k1</td></tr><tr><td>incrby key increment</td><td>将key所储存的值加上给定的增量值(increment)</td><td>incrby key 10</td></tr><tr><td>decrby key decrement</td><td>将key所储存的值加上给定的减量值(decrement)</td><td>decrby key 10</td></tr><tr><td>append key value</td><td>如果key已经存在并且是一个字符串,append命令将指定的value追加到该key原来值(value)的末尾</td><td>append k1 hi</td></tr></tbody></table><h4 id="1、Hash-哈希"><a href="#1、Hash-哈希" class="headerlink" title="1、Hash(哈希)"></a>1、Hash(哈希)</h4><h4 id="1、List-列表"><a href="#1、List-列表" class="headerlink" title="1、List(列表)"></a>1、List(列表)</h4><h4 id="1、Set-集合"><a href="#1、Set-集合" class="headerlink" title="1、Set(集合)"></a>1、Set(集合)</h4><h4 id="1、zset-sorted-set-有序集合"><a href="#1、zset-sorted-set-有序集合" class="headerlink" title="1、zset(sorted set:有序集合)"></a>1、zset(sorted set:有序集合)</h4><h4 id="1、基本语法"><a href="#1、基本语法" class="headerlink" title="1、基本语法"></a>1、基本语法</h4><ul><li>大小写敏感</li><li>数据值前必须有空格作为分隔符</li><li>使用缩进表示层级关系</li><li>缩进时必须使用空格</li><li>缩进的空格数目不重要，只要向同级的元素左侧对齐即可</li><li>#表示注释</li></ul><h4 id="2、数据格式"><a href="#2、数据格式" class="headerlink" title="2、数据格式"></a>2、数据格式</h4><ol><li>对象(map)：键值对的集合<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8081</span><br><span class="hljs-comment"># 行内写法</span><br><span class="hljs-attr">server:</span> &#123;<span class="hljs-attr">value:</span> <span class="hljs-number">8081</span>&#125;<br></code></pre></td></tr></table></figure></li><li>数组：一组按次序排列的值<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">address:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">beijing</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">shanghai</span><br><span class="hljs-attr">address:</span> [<span class="hljs-string">beijing</span>,<span class="hljs-string">shanghai</span>]<br></code></pre></td></tr></table></figure></li><li>纯量：单个的、不可再分的值<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">msg1:</span> <span class="hljs-string">&#x27;hello \n world&#x27;</span> <span class="hljs-comment"># 单引忽略转义字符</span><br><span class="hljs-attr">msg2:</span> <span class="hljs-string">&quot;hello \n world&quot;</span> <span class="hljs-comment"># 双引识别转义字符</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="3、参数引用"><a href="#3、参数引用" class="headerlink" title="3、参数引用"></a>3、参数引用</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">zhangsan</span><br><span class="hljs-attr">person:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;name&#125;</span>  <span class="hljs-comment"># 引用上面的name</span><br>  <span class="hljs-attr">age:</span> <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><hr><h3 id="四、读取配置文件内容"><a href="#四、读取配置文件内容" class="headerlink" title="四、读取配置文件内容"></a>四、读取配置文件内容</h3><ol><li>@Value<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Value(&quot;$&#123;name&#125;&quot;)</span><br><span class="hljs-meta">@Value(&quot;$&#123;person.age&#125;&quot;)</span><br><span class="hljs-meta">@Value(&quot;$&#123;location[0]&#125;&quot;)</span><br></code></pre></td></tr></table></figure></li><li>Environment类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> Environment env;<br>env.getProperty(<span class="hljs-string">&quot;person.age&quot;</span>);<br></code></pre></td></tr></table></figure></li><li>@ConfigurationProperties<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure></li></ol><hr><h3 id="五、profile"><a href="#五、profile" class="headerlink" title="五、profile"></a>五、profile</h3><h4 id="1、配置方式"><a href="#1、配置方式" class="headerlink" title="1、配置方式"></a>1、配置方式</h4><ol><li>多profile文件方式<ul><li>application.properties<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">spring.profiles.active=pro <span class="hljs-comment">//激活</span><br></code></pre></td></tr></table></figure></li><li>application-dev.properties</li><li>application-pro.properties</li><li>application-test.properties</li></ul></li><li>yml多文档方式<ul><li>用<code>---</code>来分隔</li></ul></li></ol><h4 id="2、激活方式"><a href="#2、激活方式" class="headerlink" title="2、激活方式"></a>2、激活方式</h4><ol><li>配置文件<blockquote><p>spring.profiles.active=pro</p></blockquote></li><li>虚拟机参数<blockquote><p>-Dspring.profiles.active=test</p></blockquote></li><li>命令行参数<blockquote><p>–spring.profiles.active=test</p></blockquote></li></ol><hr><h3 id="六、统一异常处理"><a href="#六、统一异常处理" class="headerlink" title="六、统一异常处理"></a>六、统一异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@ControllerAdvice</span><span class="hljs-comment">//用于捕获Controller中抛出的不同类型的异常 从而达到异常全局处理的目的</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CommonExceptionHandler</span></span>&#123;<br><span class="hljs-meta">@ExceptionHandler(value = &#123;Exception.class&#125;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Result <span class="hljs-title">testException</span><span class="hljs-params">(Exception e)</span></span>&#123;<br>Result result = <span class="hljs-keyword">new</span> Result();<br>Message message = <span class="hljs-keyword">new</span> Message();<br>message.setMsg(e.getMessage());<br>result.setMessage(message);<br><span class="hljs-keyword">return</span> result;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="七、日志设置"><a href="#七、日志设置" class="headerlink" title="七、日志设置"></a>七、日志设置</h3><h4 id="1、SpringBoot的日志"><a href="#1、SpringBoot的日志" class="headerlink" title="1、SpringBoot的日志"></a>1、SpringBoot的日志</h4><p>SpringBoot默认使用的是Slf4J+logback的日志</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 日志的依赖一般都不需要加 因为很多其他依赖都带着此依赖 --&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">logging:</span><br><span class="hljs-attr">level:</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">info</span><br><span class="hljs-attr">file:</span><br><span class="hljs-attr">path:</span> <span class="hljs-string">C:\\log</span> <span class="hljs-comment">#在本地生成spring.log文件</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">mylog.log</span><span class="hljs-comment">#使用name后path将失效 并且在parent工程下生成mylog.log文件</span><br></code></pre></td></tr></table></figure><h4 id="2、SpringBoot的统一日志处理"><a href="#2、SpringBoot的统一日志处理" class="headerlink" title="2、SpringBoot的统一日志处理"></a>2、SpringBoot的统一日志处理</h4><ol><li>使用AOP进行日志处理<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>具体使用<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LogAspect</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> Logger LOGGER = LoggerFactory.getLogger(LogAspect.class);<br>    <span class="hljs-meta">@Pointcut(value = &quot;execution(*  cn.yumeko11.springbootaop.controller..*.*(..))&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">log</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-comment">//统一切入点表达式</span><br>    &#125;<br>    <span class="hljs-meta">@Pointcut(value = &quot;log()&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">log</span><span class="hljs-params">()</span></span>&#123;&#125;<br>    <span class="hljs-comment">//环绕通知</span><br>    <span class="hljs-meta">@Around(value = &quot;log()&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">methodAroud</span><span class="hljs-params">(ProceedingJoinPoint joinPoint)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>        <span class="hljs-keyword">try</span>&#123;<br>        LOGGER.info(<span class="hljs-string">&quot;前置通知&quot;</span>);<br>        object proceed = joinPoint.proceed();<br>        LOGGER.info(<span class="hljs-string">&quot;后置通知&quot;</span>);<br>        LOGGER.info(<span class="hljs-string">&quot;返回通知&quot;</span>);<br>        <span class="hljs-keyword">return</span> proceed;<br>        &#125;<span class="hljs-keyword">catch</span>(Throwable throwable)&#123;<br>        LOGGER.info(<span class="hljs-string">&quot;异常通知&quot;</span>);<br>        throwable.printStrackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><hr><h3 id="七、SpringBoot整合"><a href="#七、SpringBoot整合" class="headerlink" title="七、SpringBoot整合"></a>七、SpringBoot整合</h3><h4 id="1、整合swagger"><a href="#1、整合swagger" class="headerlink" title="1、整合swagger"></a>1、整合swagger</h4><ol><li>添加依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.9.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.9.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>swagger-bootstrap-ui<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.9.6<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>配置类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableSwagger2</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SwaggerConfig</span></span>&#123;<br><span class="hljs-meta">@Bean</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Docket <span class="hljs-title">newDocket</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Docket(DocumentationType.SWAGGER_2)<br>.apiInfo(buildApiInfo())<br>.select()<br>.apis(RequestHandlerSelectors.withClassAnnotation(Api.class))<br>.paths(PathSelectors.any())<br>.build();<br>&#125;<br><br><span class="hljs-comment">//swagger-bootstrap-ui页面基本信息配置</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> ApiInfo <span class="hljs-title">buildApiInfo</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ApiInfoBuilder()<br>.title(<span class="hljs-string">&quot;yumeko&#x27;s Api&quot;</span>)<br>.contact(<span class="hljs-keyword">new</span> Contact(<span class="hljs-string">&quot;yumeko&quot;</span>,<span class="hljs-string">&quot;https://yumeko11.github.io/&quot;</span>,<span class="hljs-string">&quot;442397396@qq.com&quot;</span>))<br>.description(<span class="hljs-string">&quot;im yumeko&quot;</span>)<br>.termsOfServiceUrl(<span class="hljs-string">&quot;http://127.0.0.1:8080/doc.html&quot;</span>)<br>.version(<span class="hljs-string">&quot;0.0.1&quot;</span>)<br>.build();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>将接口注册到文档<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;yumeko&#x27;s Api&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BookController</span></span>&#123;<br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> BookService bookService;<br><br><span class="hljs-comment">//功能描述</span><br><span class="hljs-meta">@ApiOperation(value = &quot;添加图书&quot;,notes = &quot;添加图书&quot;)</span><br><span class="hljs-comment">//入参描述</span><br><span class="hljs-meta">@ApiImplicitParam(name = &quot;book&quot;,dataTypeClass = Book.class)</span><br><span class="hljs-meta">@RequestMapping(value = &quot;/addBook&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Result <span class="hljs-title">addBook</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> Book book)</span></span>&#123;<br>bookService.addBook(book);<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Result();<br>&#125; <br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h4 id="2、整合Mybatis"><a href="#2、整合Mybatis" class="headerlink" title="2、整合Mybatis"></a>2、整合Mybatis</h4><p>在创建项目时勾选SQL—&gt;MyBatis Framework以及MySQL Driver<br>Mybatis提供了相对于SpringBoot的起步依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>mysql驱动依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><em>注：runtime代表着此依赖只有在运行时才会生效</em></p><p>application.yml配置信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># datasource</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql:/localhost:3306/数据库名称</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">数据库用户名</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">数据库密码</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><br><span class="hljs-comment"># mybatis</span><br><span class="hljs-attr">mybatis:</span><br><span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:mapper/*Mapper.xml</span><span class="hljs-comment"># mapper映射文件路径</span><br><span class="hljs-attr">type-aliases-package:</span> <span class="hljs-string">全包名</span><span class="hljs-comment"># 配置别名</span><br><span class="hljs-attr">configuration:</span> <br><span class="hljs-attr">map-underscore-to-camel-case:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#驼峰命名</span><br><span class="hljs-attr">config-location:</span> <span class="hljs-string">classpath:mybatis-config.xml</span><span class="hljs-comment">#mybatis配置文件</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>搭建属于自己的hexo+github博客</title>
    <link href="/2021/08/02/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84hexo+github%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/08/02/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84hexo+github%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h4 id="1、下载node-js"><a href="#1、下载node-js" class="headerlink" title="1、下载node.js"></a>1、下载node.js</h4><blockquote><p><a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br><em>命令行输入<code>node -v</code>以及<code>npm -v</code>显示版本信息则安装成功</em></p></blockquote><h4 id="2、github注册"><a href="#2、github注册" class="headerlink" title="2、github注册"></a>2、github注册</h4><blockquote><p><a href="https://github.com/">https://github.com/</a></p></blockquote><ol><li>注册账户(用户名、邮箱、密码)<blockquote><p><em>注册后需要验证邮箱</em></p></blockquote></li><li>创建仓库(Create a new repository)<blockquote><p>仓库名称必须为<code>用户名.github.io</code></p></blockquote></li></ol><h4 id="3、安装git"><a href="#3、安装git" class="headerlink" title="3、安装git"></a>3、安装git</h4><blockquote><p><a href="https://git-scm.com/">https://git-scm.com/</a><br><em>命令行输入<code>git</code>显示信息则安装成功</em></p></blockquote><h4 id="4、githubSHH配置"><a href="#4、githubSHH配置" class="headerlink" title="4、githubSHH配置"></a>4、githubSHH配置</h4><ol><li>鼠标右键点击Git Bush Here打开git命令框</li><li>输入<code>ssh-keygen -t rsa -C &quot;your e-mail&quot;</code>之后直接回车产生公钥<blockquote><p><em>公钥产生在<code>C:\Users\Administrator\.ssh</code>后缀为.pub</em></p></blockquote></li><li>打开你的github<blockquote><p>settings</p><blockquote><p>SSH and GPG keys</p><blockquote><p>将公钥复制到key中</p><blockquote><p>Add SSH key</p></blockquote></blockquote></blockquote></blockquote></li></ol><h4 id="5、hexo本地使用"><a href="#5、hexo本地使用" class="headerlink" title="5、hexo本地使用"></a>5、hexo本地使用</h4><ol><li>新建文件夹名为<code>blog</code></li><li>打开命令行<ul><li>cd blog</li><li>npm install hexo-cli -g</li><li>hexo init myBlog</li><li>cd myBlog</li><li>npm install</li><li>hexo s -p 5555</li></ul></li><li>在浏览器输入<code>localhost:5555</code> 此时你的博客就已经搭建好了</li></ol><h4 id="6、安装sublime"><a href="#6、安装sublime" class="headerlink" title="6、安装sublime"></a>6、安装sublime</h4><blockquote><p><a href="http://www.sublimetext.com/download">http://www.sublimetext.com/download</a><br><em>安装成功后将myBlog文件夹复制到sublime</em><br>此时需要在_config.yml文件中修改几处</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#URL</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">https://githubName.github.io</span><br><br><span class="hljs-comment"># Deployment</span><br><span class="hljs-attr">deploy:</span> <br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/githubName/githubName.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><h4 id="7、hexo发布至github"><a href="#7、hexo发布至github" class="headerlink" title="7、hexo发布至github"></a>7、hexo发布至github</h4><p>打开命令行</p><ul><li>npm install hexo-deployer-git –save</li><li>git config –global user.name “your name”</li><li>git config –global user.email “your email”</li><li>hexo g</li><li>hexo d<br>此时你已经将hexo发布至github 在浏览器访问<code>https://githubName.github.io</code>即可查看你的博客</li></ul><h4 id="8、hexo主题使用"><a href="#8、hexo主题使用" class="headerlink" title="8、hexo主题使用"></a>8、hexo主题使用</h4><p><em>hexo官网收录有300多种主题,在hexo主页挑选你想要的主题,之后将您心仪的主题下载到本地(需要在github中pull代码)</em><br>以Fluid主题为例</p><blockquote><p><a href="https://github.com/fluid-dev/hexo-theme-fluid/releases/tag/v1.8.11">https://github.com/fluid-dev/hexo-theme-fluid/releases/tag/v1.8.11</a><br><em>此为下载zip文件方式,git pull方式请自行查看git使用</em></p></blockquote><ol><li>下载到本地解压将文件名改为fluid后 放入myBlog下的themes文件夹中</li><li>修改_config.yml<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Extensions</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br></code></pre></td></tr></table></figure></li><li>此时再通过命令行</li></ol><ul><li>hexo g</li><li>hexo d<br>即可访问属于您心仪主题的博客</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaWeb详解</title>
    <link href="/2021/07/30/JavaWeb%E8%AF%A6%E8%A7%A3/"/>
    <url>/2021/07/30/JavaWeb%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SpringMVC详解</title>
    <link href="/2021/07/30/SpringMVC%E8%AF%A6%E8%A7%A3/"/>
    <url>/2021/07/30/SpringMVC%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Spring详解</title>
    <link href="/2021/07/30/Spring%E8%AF%A6%E8%A7%A3/"/>
    <url>/2021/07/30/Spring%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot详解</title>
    <link href="/2021/07/29/SpringBoot%E8%AF%A6%E8%A7%A3/"/>
    <url>/2021/07/29/SpringBoot%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h3 id="一、SpringBoot简介"><a href="#一、SpringBoot简介" class="headerlink" title="一、SpringBoot简介"></a>一、SpringBoot简介</h3><h4 id="1、什么是SpringBoot"><a href="#1、什么是SpringBoot" class="headerlink" title="1、什么是SpringBoot"></a>1、什么是SpringBoot</h4><p>SpringBoot是所有基于SpringFramework 5.0 开发的项目的起点。<br>SpringBoot的设计是为了让你尽可能快的跑起来Spring应用程序并且尽可能减少你的配置文件</p><h4 id="2、SpringBoot的优点"><a href="#2、SpringBoot的优点" class="headerlink" title="2、SpringBoot的优点"></a>2、SpringBoot的优点</h4><ol><li>自动配置</li><li>起步依赖(精挑细选的版本信息)<ul><li>组合了一套最优搭配的技术版本</li><li>在各种starter中，定义了完成该功能需要的做标合集，其中大部分版本信息来自于父工程</li></ul></li><li>辅助功能(嵌入式服务器、安全、指标等)</li></ol><p><em>注：SpringBoot并不是对Spring功能上的增强 而是提供了一种快速使用Spring的方式。并且SpringBoot遵循约定大于配置原则</em></p><hr><h3 id="二、SpringBoot搭建"><a href="#二、SpringBoot搭建" class="headerlink" title="二、SpringBoot搭建"></a>二、SpringBoot搭建</h3><h4 id="1、创建SpringBoot的方式"><a href="#1、创建SpringBoot的方式" class="headerlink" title="1、创建SpringBoot的方式"></a>1、创建SpringBoot的方式</h4><ol><li>使用官网提供的工具创建<blockquote><p><a href="https://start.spring.io/">https://start.spring.io/</a></p></blockquote></li><li>使用阿里云脚手架创建<blockquote><p><a href="https://start.aliyun.com/">https://start.aliyun.com</a></p></blockquote></li><li>使用IDEA创建<blockquote><p>IDEA引用了官网的工具，使其创建更加方便，但本质上并没有什么不同</p></blockquote></li></ol><h4 id="2、配置文件分类"><a href="#2、配置文件分类" class="headerlink" title="2、配置文件分类"></a>2、配置文件分类</h4><ol><li>自行配置<blockquote><p>application.properties或者application.yml（application.yaml）</p></blockquote></li><li>优先级<ul><li>application.propertie</li><li>application.yml</li><li>application.yaml</li></ul></li><li>内部配置加载顺序<br>启动后，加载目录以及加载顺序<ul><li>file:./config/     当前项目下的/config目录下</li><li>file:./            当前项目的根目录</li><li>classpath:/config/ classpath的/config目录</li><li>classpath:/        classpath的根目录</li></ul></li></ol><h4 id="3、热部署"><a href="#3、热部署" class="headerlink" title="3、热部署"></a>3、热部署</h4><ol><li>添加maven依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-devtools<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--设置子项是否依赖 如果不设置为true热加载也不会成功--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>配置maven插件<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">fork</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">fork</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 如果不配置fork热加载不会成功 --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>IDEA设置<ul><li>File<blockquote><p>Settings</p><blockquote><p>Build,Execution,Deployment</p><blockquote><p>Compiler</p><blockquote><p>勾选Build project automatically</p></blockquote></blockquote></blockquote></blockquote></li><li>使用快捷键(Ctrl+Shift+Alt+/)打开面板 选择Registry勾选compiler.automake.allow.when.app.running</li></ul></li></ol><hr><h3 id="三、Yaml"><a href="#三、Yaml" class="headerlink" title="三、Yaml"></a>三、Yaml</h3><h4 id="1、基本语法"><a href="#1、基本语法" class="headerlink" title="1、基本语法"></a>1、基本语法</h4><ul><li>大小写敏感</li><li>数据值前必须有空格作为分隔符</li><li>使用缩进表示层级关系</li><li>缩进时必须使用空格</li><li>缩进的空格数目不重要，只要向同级的元素左侧对齐即可</li><li>#表示注释</li></ul><h4 id="2、数据格式"><a href="#2、数据格式" class="headerlink" title="2、数据格式"></a>2、数据格式</h4><ol><li>对象(map)：键值对的集合<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8081</span><br><span class="hljs-comment"># 行内写法</span><br><span class="hljs-attr">server:</span> &#123;<span class="hljs-attr">value:</span> <span class="hljs-number">8081</span>&#125;<br></code></pre></td></tr></table></figure></li><li>数组：一组按次序排列的值<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">address:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">beijing</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">shanghai</span><br><span class="hljs-attr">address:</span> [<span class="hljs-string">beijing</span>,<span class="hljs-string">shanghai</span>]<br></code></pre></td></tr></table></figure></li><li>纯量：单个的、不可再分的值<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">msg1:</span> <span class="hljs-string">&#x27;hello \n world&#x27;</span> <span class="hljs-comment"># 单引忽略转义字符</span><br><span class="hljs-attr">msg2:</span> <span class="hljs-string">&quot;hello \n world&quot;</span> <span class="hljs-comment"># 双引识别转义字符</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="3、参数引用"><a href="#3、参数引用" class="headerlink" title="3、参数引用"></a>3、参数引用</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">zhangsan</span><br><span class="hljs-attr">person:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;name&#125;</span>  <span class="hljs-comment"># 引用上面的name</span><br>  <span class="hljs-attr">age:</span> <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><hr><h3 id="四、读取配置文件内容"><a href="#四、读取配置文件内容" class="headerlink" title="四、读取配置文件内容"></a>四、读取配置文件内容</h3><ol><li>@Value<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Value(&quot;$&#123;name&#125;&quot;)</span><br><span class="hljs-meta">@Value(&quot;$&#123;person.age&#125;&quot;)</span><br><span class="hljs-meta">@Value(&quot;$&#123;location[0]&#125;&quot;)</span><br></code></pre></td></tr></table></figure></li><li>Environment类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> Environment env;<br>env.getProperty(<span class="hljs-string">&quot;person.age&quot;</span>);<br></code></pre></td></tr></table></figure></li><li>@ConfigurationProperties<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure></li></ol><hr><h3 id="五、profile"><a href="#五、profile" class="headerlink" title="五、profile"></a>五、profile</h3><h4 id="1、配置方式"><a href="#1、配置方式" class="headerlink" title="1、配置方式"></a>1、配置方式</h4><ol><li>多profile文件方式<ul><li>application.properties<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">spring.profiles.active=pro <span class="hljs-comment">//激活</span><br></code></pre></td></tr></table></figure></li><li>application-dev.properties</li><li>application-pro.properties</li><li>application-test.properties</li></ul></li><li>yml多文档方式<ul><li>用<code>---</code>来分隔</li></ul></li></ol><h4 id="2、激活方式"><a href="#2、激活方式" class="headerlink" title="2、激活方式"></a>2、激活方式</h4><ol><li>配置文件<blockquote><p>spring.profiles.active=pro</p></blockquote></li><li>虚拟机参数<blockquote><p>-Dspring.profiles.active=test</p></blockquote></li><li>命令行参数<blockquote><p>–spring.profiles.active=test</p></blockquote></li></ol><hr><h3 id="六、统一异常处理"><a href="#六、统一异常处理" class="headerlink" title="六、统一异常处理"></a>六、统一异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@ControllerAdvice</span><span class="hljs-comment">//用于捕获Controller中抛出的不同类型的异常 从而达到异常全局处理的目的</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CommonExceptionHandler</span></span>&#123;<br><span class="hljs-meta">@ExceptionHandler(value = &#123;Exception.class&#125;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Result <span class="hljs-title">testException</span><span class="hljs-params">(Exception e)</span></span>&#123;<br>Result result = <span class="hljs-keyword">new</span> Result();<br>Message message = <span class="hljs-keyword">new</span> Message();<br>message.setMsg(e.getMessage());<br>result.setMessage(message);<br><span class="hljs-keyword">return</span> result;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="七、日志设置"><a href="#七、日志设置" class="headerlink" title="七、日志设置"></a>七、日志设置</h3><h4 id="1、SpringBoot的日志"><a href="#1、SpringBoot的日志" class="headerlink" title="1、SpringBoot的日志"></a>1、SpringBoot的日志</h4><p>SpringBoot默认使用的是Slf4J+logback的日志</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 日志的依赖一般都不需要加 因为很多其他依赖都带着此依赖 --&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">logging:</span><br><span class="hljs-attr">level:</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">info</span><br><span class="hljs-attr">file:</span><br><span class="hljs-attr">path:</span> <span class="hljs-string">C:\\log</span> <span class="hljs-comment">#在本地生成spring.log文件</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">mylog.log</span><span class="hljs-comment">#使用name后path将失效 并且在parent工程下生成mylog.log文件</span><br></code></pre></td></tr></table></figure><h4 id="2、SpringBoot的统一日志处理"><a href="#2、SpringBoot的统一日志处理" class="headerlink" title="2、SpringBoot的统一日志处理"></a>2、SpringBoot的统一日志处理</h4><ol><li>使用AOP进行日志处理<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>具体使用<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LogAspect</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> Logger LOGGER = LoggerFactory.getLogger(LogAspect.class);<br>    <span class="hljs-meta">@Pointcut(value = &quot;execution(*  cn.yumeko11.springbootaop.controller..*.*(..))&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">log</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-comment">//统一切入点表达式</span><br>    &#125;<br>    <span class="hljs-meta">@Pointcut(value = &quot;log()&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">log</span><span class="hljs-params">()</span></span>&#123;&#125;<br>    <span class="hljs-comment">//环绕通知</span><br>    <span class="hljs-meta">@Around(value = &quot;log()&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">methodAroud</span><span class="hljs-params">(ProceedingJoinPoint joinPoint)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>        <span class="hljs-keyword">try</span>&#123;<br>        LOGGER.info(<span class="hljs-string">&quot;前置通知&quot;</span>);<br>        object proceed = joinPoint.proceed();<br>        LOGGER.info(<span class="hljs-string">&quot;后置通知&quot;</span>);<br>        LOGGER.info(<span class="hljs-string">&quot;返回通知&quot;</span>);<br>        <span class="hljs-keyword">return</span> proceed;<br>        &#125;<span class="hljs-keyword">catch</span>(Throwable throwable)&#123;<br>        LOGGER.info(<span class="hljs-string">&quot;异常通知&quot;</span>);<br>        throwable.printStrackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><hr><h3 id="七、SpringBoot整合"><a href="#七、SpringBoot整合" class="headerlink" title="七、SpringBoot整合"></a>七、SpringBoot整合</h3><h4 id="1、整合swagger"><a href="#1、整合swagger" class="headerlink" title="1、整合swagger"></a>1、整合swagger</h4><ol><li>添加依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.9.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.9.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>swagger-bootstrap-ui<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.9.6<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>配置类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableSwagger2</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SwaggerConfig</span></span>&#123;<br><span class="hljs-meta">@Bean</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Docket <span class="hljs-title">newDocket</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Docket(DocumentationType.SWAGGER_2)<br>.apiInfo(buildApiInfo())<br>.select()<br>.apis(RequestHandlerSelectors.withClassAnnotation(Api.class))<br>.paths(PathSelectors.any())<br>.build();<br>&#125;<br><br><span class="hljs-comment">//swagger-bootstrap-ui页面基本信息配置</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> ApiInfo <span class="hljs-title">buildApiInfo</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ApiInfoBuilder()<br>.title(<span class="hljs-string">&quot;yumeko&#x27;s Api&quot;</span>)<br>.contact(<span class="hljs-keyword">new</span> Contact(<span class="hljs-string">&quot;yumeko&quot;</span>,<span class="hljs-string">&quot;https://yumeko11.github.io/&quot;</span>,<span class="hljs-string">&quot;442397396@qq.com&quot;</span>))<br>.description(<span class="hljs-string">&quot;im yumeko&quot;</span>)<br>.termsOfServiceUrl(<span class="hljs-string">&quot;http://127.0.0.1:8080/doc.html&quot;</span>)<br>.version(<span class="hljs-string">&quot;0.0.1&quot;</span>)<br>.build();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>将接口注册到文档<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;yumeko&#x27;s Api&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BookController</span></span>&#123;<br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> BookService bookService;<br><br><span class="hljs-comment">//功能描述</span><br><span class="hljs-meta">@ApiOperation(value = &quot;添加图书&quot;,notes = &quot;添加图书&quot;)</span><br><span class="hljs-comment">//入参描述</span><br><span class="hljs-meta">@ApiImplicitParam(name = &quot;book&quot;,dataTypeClass = Book.class)</span><br><span class="hljs-meta">@RequestMapping(value = &quot;/addBook&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Result <span class="hljs-title">addBook</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> Book book)</span></span>&#123;<br>bookService.addBook(book);<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Result();<br>&#125; <br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h4 id="2、整合Mybatis"><a href="#2、整合Mybatis" class="headerlink" title="2、整合Mybatis"></a>2、整合Mybatis</h4><p>在创建项目时勾选SQL—&gt;MyBatis Framework以及MySQL Driver<br>Mybatis提供了相对于SpringBoot的起步依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>mysql驱动依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><em>注：runtime代表着此依赖只有在运行时才会生效</em></p><p>application.yml配置信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># datasource</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql:/localhost:3306/数据库名称</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">数据库用户名</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">数据库密码</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><br><span class="hljs-comment"># mybatis</span><br><span class="hljs-attr">mybatis:</span><br><span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:mapper/*Mapper.xml</span><span class="hljs-comment"># mapper映射文件路径</span><br><span class="hljs-attr">type-aliases-package:</span> <span class="hljs-string">全包名</span><span class="hljs-comment"># 配置别名</span><br><span class="hljs-attr">configuration:</span> <br><span class="hljs-attr">map-underscore-to-camel-case:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#驼峰命名</span><br><span class="hljs-attr">config-location:</span> <span class="hljs-string">classpath:mybatis-config.xml</span><span class="hljs-comment">#mybatis配置文件</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="/2021/07/29/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <url>/2021/07/29/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><h3 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h3><p>在想要设置文标题的文字前面加#来表示<br>一个#是一级标题，两个#是二级标题，以此类推，支持六级标题<br>注：标准语法一般在#跟个空格再写文字</p><hr><h3 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h3><p><code>*斜体*</code><br>要倾斜的文字左右分别用一个<code>*</code>号包起来<br><code>**加粗**</code><br>要加粗的文字左右分别用两个<code>*</code>号包起来<br><code>***斜体加粗***</code><br>要倾斜加粗的文字左右分别同三个<code>*</code>号包起来<br><code>~~删除线~~</code><br>要加删除线的文字左右分别用两个<code>~</code>号包起来</p><hr><h3 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h3><p>在引用的文字前加<code>&gt;</code>即可。引用也可以嵌套，如加两个<code>&gt;&gt;</code>三个<code>&gt;&gt;&gt;</code> 以及n个</p><blockquote><p>这是引用的内容1</p><blockquote><p>这是引用的内容2</p><blockquote><p>这是引用的内容3</p></blockquote></blockquote></blockquote><hr><h3 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h3><p>三个或三个以上的<code>-</code>或<code>*</code>都可以</p><hr><h3 id="五、图片"><a href="#五、图片" class="headerlink" title="五、图片"></a>五、图片</h3><p><code>![图片alt](图片地址 图片title)</code><br>图片alt就是显示在图片下面的文字，相当于对图片内容的解释<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</p><hr><h3 id="六、超链接"><a href="#六、超链接" class="headerlink" title="六、超链接"></a>六、超链接</h3><p><code>[超链接名](超链接地址)</code><br><code>[www.baidu.com](http://baidu.com)</code><br>注：Markdown本身语法不支持链接在新页面中打开</p><hr><h3 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>无序列表用<code>- + *</code>任何一种都可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">- 列表内容1<br>+ 列表内容2<br>* 列表内容3<br>注：符号与内容之间要有一个空格<br></code></pre></td></tr></table></figure><ul><li>列表内容1</li></ul><ul><li>列表内容2</li></ul><ul><li>列表内容3</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>数字加点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">1. 列表内容1<br>2. 列表内容2<br>3. 列表内容3<br>注：序号与内容之间要有空格<br></code></pre></td></tr></table></figure><ol><li>列表内容1</li><li>列表内容2</li><li>列表内容3</li></ol><p>列表嵌套<br>上一级和下一级之间有三个空格即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">1. 列表大内容<br>   - 列表小内容1<br>   - 列表小内容2<br>   - 列表小内容3<br></code></pre></td></tr></table></figure><ol><li>列表大内容<ul><li>列表小内容1</li><li>列表小内容2</li><li>列表小内容3</li></ul></li></ol><hr><h3 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">|表头|表头|表头|<br>|-|:-:|-: |<br>|内容|内容|内容|<br>|内容|内容|内容|<br><br>第二行分隔表头和内容<br>文字默认居左<br>-两侧都加:表示文字居中<br>-右侧加:表示文字居右<br></code></pre></td></tr></table></figure><table><thead><tr><th>姓名</th><th align="center">年龄</th><th align="right">性别</th></tr></thead><tbody><tr><td>李知恩</td><td align="center">23</td><td align="right">女</td></tr><tr><td>张禹</td><td align="center">21</td><td align="right">男</td></tr></tbody></table><hr><h3 id="九、代码"><a href="#九、代码" class="headerlink" title="九、代码"></a>九、代码</h3><p>单行代码：代码之间分别用一个反引号包起来<br><code>代码内容</code><br>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//代码内容1</span><br><span class="hljs-comment">//代码内容2</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
